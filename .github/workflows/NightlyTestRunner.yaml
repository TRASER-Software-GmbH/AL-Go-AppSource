name: 'Nightly Test Runner'

run-name: "Run nightly tests across BC versions"

on:
  schedule:
    - cron: '0 3 * * *'  # 3 AM daily (after backups)
  workflow_dispatch:
    inputs:
      bcVersion:
        description: 'BC Version to test (all, 23.0, 24.0)'
        required: false
        default: 'all'
      testSuite:
        description: 'Test suite to run (all, Unit, Integration)'
        required: false
        default: 'all'

permissions:
  actions: read
  contents: read
  id-token: write

defaults:
  run:
    shell: powershell

env:
  ALGoOrgSettings: ${{ vars.ALGoOrgSettings }}
  ALGoRepoSettings: ${{ vars.ALGoRepoSettings }}

jobs:
  Initialization:
    needs: [ ]
    runs-on: [ self-hosted, windows ]
    outputs:
      telemetryScopeJson: ${{ steps.init.outputs.telemetryScopeJson }}
      testMatrix: ${{ steps.determineTestMatrix.outputs.testMatrix }}
      githubRunner: ${{ steps.ReadSettings.outputs.GitHubRunnerJson }}
      githubRunnerShell: ${{ steps.ReadSettings.outputs.GitHubRunnerShell }}
    steps:
      - name: Dump Workflow Information
        uses: TRASER-Software-GmbH/AL-Go-Actions/DumpWorkflowInfo@v7.2
        with:
          shell: powershell

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Initialize the workflow
        id: init
        uses: TRASER-Software-GmbH/AL-Go-Actions/WorkflowInitialize@v7.2
        with:
          shell: powershell

      - name: Read settings
        id: ReadSettings
        uses: TRASER-Software-GmbH/AL-Go-Actions/ReadSettings@v7.2
        with:
          shell: powershell
          get: nightlyTests

      - name: Determine Test Matrix
        id: determineTestMatrix
        run: |
          $errorActionPreference = "Stop"; $ProgressPreference = "SilentlyContinue"; Set-StrictMode -Version 2.0
          
          $settings = $env:Settings | ConvertFrom-Json
          $requestedVersion = '${{ github.event.inputs.bcVersion }}'
          $requestedSuite = '${{ github.event.inputs.testSuite }}'
          
          $testMatrix = @()
          
          if ($settings.PSObject.Properties.Name -contains 'nightlyTests' -and $settings.nightlyTests.enabled) {
            foreach ($version in $settings.nightlyTests.versions) {
              if ($requestedVersion -eq 'all' -or [string]::IsNullOrEmpty($requestedVersion) -or $requestedVersion -eq $version.bcVersion) {
                foreach ($suite in $version.testSuites) {
                  if ($requestedSuite -eq 'all' -or [string]::IsNullOrEmpty($requestedSuite) -or $requestedSuite -eq $suite) {
                    $testMatrix += @{
                      bcVersion = $version.bcVersion
                      testSuite = $suite
                      containerName = "$($version.containerName)-$($suite.ToLower())"
                      backupSource = $version.backupSource
                    }
                  }
                }
              }
            }
          }
          
          Write-Host "Test matrix determined: $($testMatrix.Count) combinations"
          $testMatrixJson = $testMatrix | ConvertTo-Json -Compress
          if ($testMatrix.Count -eq 0) { $testMatrixJson = '[]' }
          
          Add-Content -Encoding UTF8 -Path $env:GITHUB_OUTPUT -Value "testMatrix=$testMatrixJson"

  RunTests:
    needs: [ Initialization ]
    if: (!cancelled()) && fromJson(needs.Initialization.outputs.testMatrix)[0] != null
    strategy:
      matrix:
        include: ${{ fromJson(needs.Initialization.outputs.testMatrix) }}
      fail-fast: false
    runs-on: ${{ fromJson(needs.Initialization.outputs.githubRunner) }}
    defaults:
      run:
        shell: ${{ needs.Initialization.outputs.githubRunnerShell }}
    name: Test BC ${{ matrix.bcVersion }} - ${{ matrix.testSuite }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        
      - name: Download Test Artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: './test-artifacts'
          pattern: '*-test-*'
          merge-multiple: true
        continue-on-error: true
          
      - name: Read settings
        uses: TRASER-Software-GmbH/AL-Go-Actions/ReadSettings@v7.2
        with:
          shell: powershell
          get: nightlyTests

      - name: Read secrets
        id: ReadSecrets
        uses: TRASER-Software-GmbH/AL-Go-Actions/ReadSecrets@v7.2
        with:
          shell: powershell
          gitHubSecrets: ${{ toJson(secrets) }}
          getSecrets: 'containerUsername,containerPassword,testUsername,testPassword,emailNotification'

      - name: Run Tests
        uses: TRASER-Software-GmbH/AL-Go-Actions/TestRunner@v7.2
        with:
          shell: powershell
          bcVersion: ${{ matrix.bcVersion }}
          testSuite: ${{ matrix.testSuite }}
          backupSource: ${{ matrix.backupSource }}
          containerName: ${{ matrix.containerName }}
          artifactsFolder: './test-artifacts'
        env:
          Secrets: '${{ steps.ReadSecrets.outputs.Secrets }}'
          
      - name: Publish Test Results
        uses: dorny/test-reporter@31a54ee7ebcacc03a09ea97a7e5465a47b84aea5 # v1.9.1
        if: always()
        with:
          name: 'Tests BC ${{ matrix.bcVersion }} - ${{ matrix.testSuite }}'
          path: './test-results/*.xml'
          reporter: java-junit
          fail-on-error: false

  PostProcess:
    needs: [ Initialization, RunTests ]
    if: (!cancelled())
    runs-on: ${{ fromJson(needs.Initialization.outputs.githubRunner) }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Finalize the workflow
        id: PostProcess
        uses: TRASER-Software-GmbH/AL-Go-Actions/WorkflowPostProcess@v7.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          shell: powershell
          telemetryScopeJson: ${{ needs.Initialization.outputs.telemetryScopeJson }}
          currentJobContext: ${{ toJson(job) }}